plugins {
    id 'groovy'
    id 'signing'
    id 'maven-publish'
    id 'java'
    id 'java-library'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id 'edu.sc.seis.launch4j' version '2.4.4'
    id 'org.cyclonedx.bom' version '1.7.2'
}
cyclonedxBom {
    includeConfigs = ["runtimeClasspath"]

    skipConfigs = ["compileClasspath", "testCompileClasspath"]

    projectType = "application"
    schemaVersion = "1.4"
    destination = file("build/reports")
    outputName = "CycloneDX-Sbom"
    outputFormat = "all"
    includeBomSerialNumber = true
    componentVersion = "2.0.0"
}

group 'io.github.asseco-pst'
version "1.4.0"

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/org.codehaus.groovy/groovy
    implementation 'org.codehaus.groovy:groovy:3.0.5'
    // https://mvnrepository.com/artifact/org.codehaus.groovy/groovy-json
    implementation 'org.codehaus.groovy:groovy-json:3.0.5'
    // https://mvnrepository.com/artifact/info.picocli/picocli
    implementation 'info.picocli:picocli:4.5.2'
    // https://mvnrepository.com/artifact/org.gitlab4j/gitlab4j-api
    implementation 'org.gitlab4j:gitlab4j-api:4.15.4'
    // https://mvnrepository.com/artifact/org.yaml/snakeyaml
    implementation 'org.yaml:snakeyaml:2.2'
    // https://mvnrepository.com/artifact/com.vdurmont/semver4j
    implementation 'com.vdurmont:semver4j:2.2.0'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation 'org.slf4j:slf4j-api:2.0.9'
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    implementation 'ch.qos.logback:logback-classic:1.3.11'
    testImplementation 'junit:junit:4.12'
}

application {
    getMainClass().set('io.github.asseco.pst.commands.BaseCommand')
}

jar {
    manifest {
        attributes 'Main-Class': project.group + '.Main'
    }
}

createExe {
    mainClassName = 'io.github.asseco.pst.commands.BaseCommand'
    headerType = "console"
    icon = "${projectDir}/assets/einstein.ico"
    jar = "${rootDir}/build/libs/${rootProject.name}-${project.version}-shadow.jar"
    outfile = "${rootProject.name}-${project.version}.exe"
}

shadowJar {
    mainClassName = 'io.github.asseco.pst.commands.BaseCommand'
//    classifier = ''
    classifier = 'shadow'

    /*
    dependencies {
        exclude(dependency('org.slf4j:slf4j-log4j12:1.7.30'))
        exclude(dependency('org.apache.logging.log4j:log4j-core:2.13.3'))
    }*/
}

task sourcesJarGen(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJarGen(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
//        shadow(MavenPublication) {
//            project.shadow.component(it)
        library(MavenPublication) {
            from components.java
            artifactId = 'einstein'
            pom {
                name = 'einstein'
                description = 'Einstein is a dependency management application that is used to calculate project dependencies.'
                url = 'https://github.com/asseco-pst/einstein'
                inceptionYear = '2019'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'assecopst'
                        name = 'Asseco PST'
                        email = 'servicos.dcs@pst.asseco.com'
                        organization = 'Asseco PST'
                        organizationUrl = 'https://www.pst.asseco.com'
                    }
                }
                scm {
                    url = 'https://github.com/asseco-pst/einstein'
                    connection = 'scm:https://github.com/asseco-pst/einstein.git'
                    developerConnection = 'scm:git://github.com/asseco-pst/einstein.git'
                }
            }
            artifact sourcesJarGen
            artifact javadocJarGen
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = project.hasProperty('ossrhUsername') ? ossrhUsername : "Unknown user"
                password = project.hasProperty('ossrhPassword') ? ossrhPassword : "Unknown password"
            }
        }
    }
}

signing {
//    sign publishing.publications.shadow
    sign publishing.publications.library
}

build.finalizedBy('cyclonedxBom')